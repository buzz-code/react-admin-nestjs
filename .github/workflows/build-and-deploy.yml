name: Build and Deploy

on:
  push:
    branches:
      - main   # Trigger the workflow on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest   # Specify the runner OS for the job

    steps:
    - name: SSH into server
      uses: appleboy/ssh-action@master   # Use the ssh-action action
      with:
        host: ${{ secrets.SERVER_IP }}   # Server IP address
        username: ${{ secrets.SERVER_USERNAME }}   # Server username
        password: ${{ secrets.SERVER_PASSWORD }}   # Server password
        script: |
          # Check if there is a directory named the same as my repository name
          if [ -d "${{ github.event.repository.name }}" ]; then
            cd "${{ github.event.repository.name }}"   # If directory exists, change to it
            git pull origin main
            git submodule update --init
          else
            git clone "${{ github.repositoryUrl }}" "${{ github.event.repository.name }}"   # If directory does not exist, clone the repository
            cd "${{ github.event.repository.name }}"   # Change to the cloned repository
            git submodule update --init
            cp .env.template .env   # Copy ".env.template" to ".env"
          fi
          
          docker compose up --build -d   # Run docker-compose up in detached mode
